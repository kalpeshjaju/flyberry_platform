name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: flyberry_platform
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true

      - name: Validate specs (JSON)
        working-directory: flyberry_platform
        run: |
          python core/engine/validate_spec.py --spec specs/flyberry_brand.yml --json
          python core/engine/validate_spec.py --spec specs/flyberry_oct_restart.yml --json

      - name: Plan runs
        working-directory: flyberry_platform
        run: |
          python core/engine/plan.py --spec specs/flyberry_brand.yml
          python core/engine/plan.py --spec specs/flyberry_oct_restart.yml

      - name: Run suites
        working-directory: flyberry_platform
        run: |
          python core/engine/run.py --spec specs/flyberry_brand.yml --no-validate
          python core/engine/run.py --spec specs/flyberry_oct_restart.yml --no-validate

      - name: Fail if gates failed (brand)
        working-directory: flyberry_platform
        run: |
          python - << 'PY'
import json, sys
with open('product/runs/flyberry_brand/run.json') as f:
    data = json.load(f)
status = (data.get('meta') or {}).get('overall_gate_status')
print('brand overall_gate_status =', status)
sys.exit(1 if status != 'pass' else 0)
PY

      - name: Fail if gates failed (site)
        working-directory: flyberry_platform
        run: |
          python - << 'PY'
import json, sys
with open('product/runs/flyberry_oct_restart/run.json') as f:
    data = json.load(f)
status = (data.get('meta') or {}).get('overall_gate_status')
print('site overall_gate_status =', status)
sys.exit(1 if status != 'pass' else 0)
PY

      - name: Render projections from saved runs
        if: always()
        working-directory: flyberry_platform
        run: |
          python core/engine/render.py --run product/runs/flyberry_brand/run.json --profile developer.json || true
          python core/engine/render.py --run product/runs/flyberry_brand/run.json --profile brand-guide.html || true
          python core/engine/render.py --run product/runs/flyberry_oct_restart/run.json --profile exec.csv || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: flyberry-artifacts
          path: |
            flyberry_platform/product/runs/**
          if-no-files-found: warn

