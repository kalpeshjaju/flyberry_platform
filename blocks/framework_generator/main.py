# blocks/framework_generator/main.py
import os
import json

def run(inputs, outputs):
    """
    Generates the brand framework markdown file from processed data and templates.
    """
    print("  Executing framework_generator block...")

    processed_data = {}
    template_files = []

    # Load inputs
    for input_path in inputs:
        if input_path.endswith('.json'):
            with open(input_path, 'r') as f:
                processed_data = json.load(f)
        elif os.path.isdir(input_path):
            template_files.extend([os.path.join(input_path, f) for f in os.listdir(input_path)])

    # Simulate framework generation
    framework_content = f"""# Flyberry Brand Framework (Generated)

## 1. Introduction
This document was automatically generated by the Flyberry Platform.

## 2. Processed Data Summary
- The data loader processed {len(processed_data.get('source_files', []))} source files.
- Notes: {processed_data.get('notes', 'N/A')}

## 3. Templates Used
- Found {len(template_files)} template files.
"""
    for template in template_files:
        framework_content += f"- `{template}`\n"

    # Write to the first specified output file
    if outputs:
        output_file = outputs[0]
        with open(output_file, 'w') as f:
            f.write(framework_content)
    else:
        print("  Warning: No outputs defined for framework_generator.")

if __name__ == '__main__':
    run(['product/processed_data.json', 'fixtures/templates'], ['product/flyberry_brand_framework.md'])
